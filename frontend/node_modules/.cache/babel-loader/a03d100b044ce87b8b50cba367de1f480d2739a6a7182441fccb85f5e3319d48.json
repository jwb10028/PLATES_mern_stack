{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\whitb\\\\Desktop\\\\PLATES_mern_stack\\\\frontend\\\\src\\\\components\\\\PlateForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { usePlatesContext } from \"../hooks/usePlatesContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlateForm = () => {\n  _s();\n  const {\n    dispatch\n  } = usePlatesContext();\n  const [title, setTitle] = useState('');\n  const [artist, setArtist] = useState('');\n  const [genre, setGenre] = useState('');\n  const [description, setDescription] = useState('');\n  const [privacy, setPrivacy] = useState('');\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const plate = {\n      title,\n      artist,\n      genre,\n      description,\n      privacy\n    };\n    const response = await fetch('/api/plates', {\n      method: 'POST',\n      body: JSON.stringify(plate),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n      setEmptyFields(json.emptyFields);\n    }\n    if (response.ok) {\n      setTitle('');\n      setArtist('');\n      setGenre('');\n      setDescription('');\n      setPrivacy('');\n      setError(null);\n      setEmptyFields([]);\n      console.log('new workout added', json);\n      dispatch({\n        type: 'CREATE_PLATE',\n        payload: json\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a new plate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Plate Title: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTitle(e.target.value),\n      value: title,\n      className: emptyFields.includes('title') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Plate Genre: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setGenre(e.target.value),\n      value: genre,\n      className: emptyFields.includes('genre') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Plate Description: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setDescription(e.target.value),\n      value: description,\n      className: emptyFields.includes('description') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Plate Privacy : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: e => setPrivacy(e.target.value),\n      value: privacy,\n      className: emptyFields.includes('privacy') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Plate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n};\n_s(PlateForm, \"43vSGvxT1oc56JRrlvEqLuL3tAY=\", false, function () {\n  return [usePlatesContext];\n});\n_c = PlateForm;\nexport default PlateForm;\nvar _c;\n$RefreshReg$(_c, \"PlateForm\");","map":{"version":3,"names":["useState","usePlatesContext","jsxDEV","_jsxDEV","PlateForm","_s","dispatch","title","setTitle","artist","setArtist","genre","setGenre","description","setDescription","privacy","setPrivacy","error","setError","emptyFields","setEmptyFields","handleSubmit","e","preventDefault","plate","response","fetch","method","body","JSON","stringify","headers","json","ok","console","log","type","payload","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","includes","_c","$RefreshReg$"],"sources":["C:/Users/whitb/Desktop/PLATES_mern_stack/frontend/src/components/PlateForm.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport { usePlatesContext } from \"../hooks/usePlatesContext\";\r\n\r\nconst PlateForm = () => {\r\n    const { dispatch } = usePlatesContext()\r\n    const [title, setTitle] = useState('')\r\n    const [artist, setArtist] = useState('')\r\n    const [genre, setGenre] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [privacy, setPrivacy] = useState('')\r\n    const [error, setError] = useState(null)\r\n    const [emptyFields, setEmptyFields] = useState([])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        \r\n        const plate = {title, artist, genre, description, privacy}\r\n\r\n        const response = await fetch('/api/plates', {\r\n            method: 'POST',\r\n            body: JSON.stringify(plate),\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        const json = await response.json()\r\n\r\n        if (!response.ok) {\r\n            setError(json.error)\r\n            setEmptyFields(json.emptyFields)\r\n        }\r\n\r\n        if (response.ok) {\r\n            setTitle('')\r\n            setArtist('')\r\n            setGenre('')\r\n            setDescription('')\r\n            setPrivacy('')\r\n            setError(null)\r\n            setEmptyFields([])\r\n            console.log('new workout added', json)\r\n            dispatch({type: 'CREATE_PLATE', payload: json})\r\n        }\r\n    }\r\n\r\n    return (\r\n      <form className=\"create\" onSubmit={handleSubmit}>\r\n        <h3>Add a new plate</h3>\r\n\r\n        <label>Plate Title: </label>\r\n        <input\r\n            type=\"text\"\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            value={title}\r\n            className={emptyFields.includes('title') ? 'error' : ''}\r\n        />\r\n        <label>Plate Genre: </label>\r\n        <input\r\n            type=\"text\"\r\n            onChange={(e) => setGenre(e.target.value)}\r\n            value={genre}\r\n            className={emptyFields.includes('genre') ? 'error' : ''}\r\n        />\r\n        <label>Plate Description: </label>\r\n        <input\r\n            type=\"text\"\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            value={description}\r\n            className={emptyFields.includes('description') ? 'error' : ''}\r\n        />\r\n        <label>Plate Privacy : </label>\r\n        <input\r\n            type=\"number\"\r\n            onChange={(e) => setPrivacy(e.target.value)}\r\n            value={privacy}\r\n            className={emptyFields.includes('privacy') ? 'error' : ''}\r\n        />\r\n        <button>Add Plate</button>\r\n        {error && <div className=\"error\">{error}</div>}\r\n      </form> \r\n    )\r\n}\r\n\r\nexport default PlateForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}